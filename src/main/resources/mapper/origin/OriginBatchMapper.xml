<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.panda.mapper.origin.OriginBatchMapper">
  <resultMap id="BaseResultMap" type="com.panda.model.origin.OriginBatch">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="batch_num" jdbcType="VARCHAR" property="batchNum" />
    <result column="origin_set_id" jdbcType="VARCHAR" property="originSetId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="create_id" jdbcType="VARCHAR" property="createId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_id" jdbcType="VARCHAR" property="modifyId" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, batch_num, origin_set_id, status, description, create_id, create_time, modify_id, 
    modify_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from e_origin_batch
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from e_origin_batch
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.panda.model.origin.OriginBatch">
    insert into e_origin_batch (id, batch_num, origin_set_id, 
      status, description, create_id, 
      create_time, modify_id, modify_time
      )
    values (#{id,jdbcType=VARCHAR}, #{batchNum,jdbcType=VARCHAR}, #{originSetId,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, #{createId,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{modifyId,jdbcType=VARCHAR}, #{modifyTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.panda.model.origin.OriginBatch">
    insert into e_origin_batch
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="batchNum != null">
        batch_num,
      </if>
      <if test="originSetId != null">
        origin_set_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="createId != null">
        create_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyId != null">
        modify_id,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="batchNum != null">
        #{batchNum,jdbcType=VARCHAR},
      </if>
      <if test="originSetId != null">
        #{originSetId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyId != null">
        #{modifyId,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.panda.model.origin.OriginBatch">
    update e_origin_batch
    <set>
      <if test="batchNum != null">
        batch_num = #{batchNum,jdbcType=VARCHAR},
      </if>
      <if test="originSetId != null">
        origin_set_id = #{originSetId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyId != null">
        modify_id = #{modifyId,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.panda.model.origin.OriginBatch">
    update e_origin_batch
    set batch_num = #{batchNum,jdbcType=VARCHAR},
      origin_set_id = #{originSetId,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      create_id = #{createId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_id = #{modifyId,jdbcType=VARCHAR},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from e_origin_batch
    where 1 = 1
  </select>

  <select id="selectBatchList" resultMap="BaseResultMap" parameterType="map">
    select
    <include refid="Base_Column_List" />
    from e_origin_batch
    where 1 = 1
    <if test="originSetId != null and originSetId != ''">
      AND origin_set_id = #{originSetId}
    </if>
    <if test="status != null and status != ''">
      AND status = #{status}
    </if>
  </select>
  
  <select id="selectOriginBatchDataList" resultType="map" parameterType="map">
    SELECT o.*,
      CASE WHEN ISNULL(oc.id) THEN 0 ELSE COUNT(oc.id) END codeNum,
      CASE WHEN ISNULL(oc1.id) THEN 0 ELSE COUNT(oc1.id) END createStatus
      FROM (
        SELECT
        ob.id,ob.status,ob.batch_num,os.origin_set_name,ob.create_time
        FROM
        e_origin_batch ob
        LEFT JOIN e_origin_set os ON ob.origin_set_id = os.id
        WHERE
        1 = 1
        <if test="originSetId != null and originSetId != ''">
          AND ob.origin_set_id = #{originSetId}
        </if>
        <if test="status != null and status != ''">
          AND ob.status = #{status}
        </if>
    )o
    LEFT JOIN e_origin_code oc ON o.id = oc.origin_batch_id
    LEFT JOIN e_origin_code oc1 ON o.id = oc.origin_batch_id AND oc1.create_status = 1
    GROUP BY o.id
    ORDER BY o.create_time DESC
  </select>

</mapper>